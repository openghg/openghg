name: OpenGHG Build and Release

on:
  push:
    branches: [master, devel]
    tags:
      - "*"

jobs:
  release_pypi:
    name: Build and publish Python distributions to PyPI and TestPyPI
    runs-on: ubuntu-latest
    needs: ["test", "docs"]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
      - name: Install pypa/build
        run: |
          pip install --upgrade build
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@f8c70e705ffc13c3b4d1221169b84f12a75d6ca8
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  release_conda:
    name: Build and publish conda package
    runs-on: ubuntu-latest
    needs: ["test", "docs"]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@875557da4ee020f18df03b8910a42203fbf02da1
        with:
          init-shell: bash
      - name: Build and push the conda package
        run: |
          micromamba create -n openghg_build anaconda-client boa -c conda-forge
          micromamba activate openghg_build
          conda config --append channels openghg
          mkdir ${{ github.workspace }}/build
          conda mambabuild --croot ${{ github.workspace }}/build recipes -c conda-forge
          BUILD_DIR=${GITHUB_WORKSPACE}/build
          BUILD=$(find "$BUILD_DIR" -name '*.tar.bz2')
          anaconda --token "$ANACONDA_TOKEN" upload --user openghg --label main "$BUILD"
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
